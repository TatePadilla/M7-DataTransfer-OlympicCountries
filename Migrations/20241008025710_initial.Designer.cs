// <auto-generated />
using M7_DataTransfer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace M7_DataTransfer.Migrations
{
    [DbContext(typeof(CountryContext))]
    [Migration("20241008025710_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("M7_DataTransfer.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "indoor",
                            Name = "Indoor"
                        },
                        new
                        {
                            CategoryID = "outdoor",
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("M7_DataTransfer.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("GameID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "ca",
                            CategoryID = "indoor",
                            Flag = "canada.png",
                            GameID = "winter",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryID = "se",
                            CategoryID = "indoor",
                            Flag = "sweden.png",
                            GameID = "winter",
                            Name = "Sweden"
                        },
                        new
                        {
                            CountryID = "gb",
                            CategoryID = "indoor",
                            Flag = "greatbritain.png",
                            GameID = "winter",
                            Name = "Great Britain"
                        },
                        new
                        {
                            CountryID = "jm",
                            CategoryID = "outdoor",
                            Flag = "jamaica.png",
                            GameID = "winter",
                            Name = "Jamaica"
                        },
                        new
                        {
                            CountryID = "it",
                            CategoryID = "outdoor",
                            Flag = "italy.png",
                            GameID = "winter",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryID = "jp",
                            CategoryID = "outdoor",
                            Flag = "japan.png",
                            GameID = "winter",
                            Name = "Japan"
                        },
                        new
                        {
                            CountryID = "de",
                            CategoryID = "indoor",
                            Flag = "germany.png",
                            GameID = "summer",
                            Name = "Germany"
                        },
                        new
                        {
                            CountryID = "cn",
                            CategoryID = "indoor",
                            Flag = "china.png",
                            GameID = "summer",
                            Name = "China"
                        },
                        new
                        {
                            CountryID = "mx",
                            CategoryID = "indoor",
                            Flag = "mexico.png",
                            GameID = "summer",
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryID = "br",
                            CategoryID = "outdoor",
                            Flag = "brazil.png",
                            GameID = "summer",
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryID = "nl",
                            CategoryID = "outdoor",
                            Flag = "netherlands.png",
                            GameID = "summer",
                            Name = "Netherlands"
                        },
                        new
                        {
                            CountryID = "us",
                            CategoryID = "outdoor",
                            Flag = "usa.png",
                            GameID = "summer",
                            Name = "USA"
                        },
                        new
                        {
                            CountryID = "th",
                            CategoryID = "indoor",
                            Flag = "thailand.png",
                            GameID = "paralympics",
                            Name = "Thailand"
                        },
                        new
                        {
                            CountryID = "uy",
                            CategoryID = "indoor",
                            Flag = "uruguay.png",
                            GameID = "paralympics",
                            Name = "Uruguay"
                        },
                        new
                        {
                            CountryID = "ua",
                            CategoryID = "indoor",
                            Flag = "ukraine.png",
                            GameID = "paralympics",
                            Name = "Ukraine"
                        },
                        new
                        {
                            CountryID = "at",
                            CategoryID = "outdoor",
                            Flag = "austria.png",
                            GameID = "paralympics",
                            Name = "Austria"
                        },
                        new
                        {
                            CountryID = "pk",
                            CategoryID = "outdoor",
                            Flag = "pakistan.png",
                            GameID = "paralympics",
                            Name = "Pakistan"
                        },
                        new
                        {
                            CountryID = "zw",
                            CategoryID = "outdoor",
                            Flag = "zimbabwe.png",
                            GameID = "paralympics",
                            Name = "Zimbabwe"
                        },
                        new
                        {
                            CountryID = "fr",
                            CategoryID = "indoor",
                            Flag = "france.png",
                            GameID = "youth",
                            Name = "France"
                        },
                        new
                        {
                            CountryID = "cy",
                            CategoryID = "indoor",
                            Flag = "cyprus.png",
                            GameID = "youth",
                            Name = "Cyprus"
                        },
                        new
                        {
                            CountryID = "ru",
                            CategoryID = "indoor",
                            Flag = "russia.png",
                            GameID = "youth",
                            Name = "Russia"
                        },
                        new
                        {
                            CountryID = "fi",
                            CategoryID = "outdoor",
                            Flag = "finland.png",
                            GameID = "youth",
                            Name = "Finland"
                        },
                        new
                        {
                            CountryID = "sk",
                            CategoryID = "outdoor",
                            Flag = "slovakia.png",
                            GameID = "youth",
                            Name = "Slovakia"
                        },
                        new
                        {
                            CountryID = "pt",
                            CategoryID = "outdoor",
                            Flag = "portugal.png",
                            GameID = "youth",
                            Name = "Portugal"
                        });
                });

            modelBuilder.Entity("M7_DataTransfer.Models.Game", b =>
                {
                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = "winter",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameID = "summer",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameID = "paralympics",
                            Name = "Paralympics"
                        },
                        new
                        {
                            GameID = "youth",
                            Name = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("M7_DataTransfer.Models.Country", b =>
                {
                    b.HasOne("M7_DataTransfer.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("M7_DataTransfer.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID");

                    b.Navigation("Category");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
